
name: Test Cross Platform

# Controls when the action will run.
on:
  push:
    branches:
      - full-integ
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Set an environment variables for the workflow
env:
  UV_HTTP_TIMEOUT: 300
  PIP_DISABLE_PIP_VERSION_CHECK: 1

# Define the jobs that run in the workflow
jobs:
  integ-tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
  
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
      with:
        install: true

    - name: init QEMU
      run: |
        ls -al /proc/sys/fs/binfmt_misc
        for entry in /proc/sys/fs/binfmt_misc/qemu-*; do
          if [ "$(basename "$entry")" != "status" ]; then
            if [ -r "$entry" ]; then
              echo "Contents of $entry:"
              cat "$entry"
              echo
            else
              echo "Skipping $entry: Permission denied"
            fi
          fi
        done

    - name: Test mainline
      run: |
        docker run --rm --privileged tonistiigi/binfmt --install all
        ls -al /proc/sys/fs/binfmt_misc
        for entry in /proc/sys/fs/binfmt_misc/*; do
          if [ "$(basename "$entry")" != "status" ]; then
            if [ -r "$entry" ]; then
              echo "Contents of $entry:"
              cat "$entry"
              echo
            else
              echo "Skipping $entry: Permission denied"
            fi
          fi
        done
        docker run --rm arm64v8/alpine sh -c "uname -a && echo"
        docker run --rm arm32v7/alpine sh -c "uname -a && echo"
        docker run --rm ppc64le/alpine sh -c "uname -a && echo"
        docker run --rm s390x/alpine sh -c "uname -a && echo"
        docker run --rm tonistiigi/debian:riscv sh -c "uname -a && echo"
        docker run --rm --platform=linux/s390x s390x/ubuntu sh -c "uname -a && echo"
        docker run --rm --platform=linux/ppc64le ppc64le/ubuntu sh -c "uname -a && echo"
        docker run --rm --platform=linux/arm64 arm64v8/ubuntu sh -c "uname -a && echo"
