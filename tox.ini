[tox]
isolated_build = true
envlist = py39, test, format, lint, doc, build

[gh-actions]
python =
    3.9: py39, test, format, lint, doc, build
    3.10: py310, test, format, lint, doc, build
    3.11: py311, test, format, lint, doc, build
    3.12: py312, test, format, lint, doc, build

[testenv:test]
allowlist_externals = rye, cargo
commands =
    # cargo test -v
    rye sync --all-features
    rye run pytest {tty:--color=yes}

[testenv:format]
allowlist_externals = rye
commands =
    rye sync
    rye run ruff format python/fusion py_tests
    rye run ruff check --fix python/fusion py_tests

[testenv:lint]
allowlist_externals = rye, cargo
set_env =
    {tty:MYPY_FORCE_COLOR = 1}
commands =
    # cargo clippy
    rye sync
    rye run ruff check python/fusion py_tests
    rye run mypy --disallow-untyped-defs python/fusion py_tests
    rye run ruff check python/fusion py_tests --ignore-noqa --exit-zero

[testenv:doc]
allowlist_externals = rye
commands_pre = rye sync --all-features
commands =
   rye run mike deploy vtest -m "test doc build" --ignore
   rye run mike delete vtest -m "remove doc build" --ignore

[testenv:build]
allowlist_externals = rye

commands =
    rye sync
    rye build
    rye run twine check dist/*

[testenv:clean]
allowlist_externals = rm # for cleanup
commands =
    rm -rf {toxinidir}/dist {toxinidir}/target {toxinidir}/downloads