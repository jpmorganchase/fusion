[tool]
[tool.poetry]
name = "PyFusion"
version = "1.0.21"

homepage = "https://github.com/jpmorganchase/fusion"
description = "JPMC Fusion Developer Tools"
authors = ["FusionDevs <fusion_developers@jpmorgan.com>"]
readme = "README.md"
license = "Apache-2.0"
classifiers = [
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: Apache Software License',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
]
packages = [
    { include = "fusion" },
    { include = "tests", format = "sdist" },
]

[tool.poetry.dependencies]
python = ">=3.7.1,<4.0"

requests = ">2.27.0"
types-requests = ">2.27.0"
pandas = ">1.1.1"
joblib = ">=1.1.0"
tabulate = ">=0.8.10"
types-tabulate = ">=0.8.8"
tqdm = ">=4.64.0"
pyarrow = ">=11.0"
fsspec = ">=2021.6.1"
aiohttp = ">=3.7.1"

polars = { version = ">=0.12", optional = true }
markupsafe = { version = ">=2.0.1", optional = true }
jinja2 = { version = ">2.0.0", optional = true }
black = { version = ">=22.3.0", optional = true }
isort = { version = ">=5.8.0", optional = true }
flake8 = { version = ">=3.9.2", optional = true }
flake8-docstrings = { version = ">=1.6.0", optional = true }
mypy = { version = "^0.900", optional = true }
pytest = { version = ">=6.2.4", optional = true }
pytest-cov = { version = ">=2.12.0", optional = true }
tox = { version = ">=3.20.1", optional = true }
tox-conda = { version = ">=0.8.2", optional = true }
virtualenv = { version = ">=20.2.2", optional = true }
pip = { version = ">=22.3.1", optional = true }
mkdocs = { version = ">=1.2.4", optional = true }
mkdocs-material = { version = ">=8.1.0", optional = true }
mkdocs-material-extensions = { version = ">=1.0.1", optional = true }
mkdocstrings = { version = ">=0.16.0", optional = true, extras = ["python"] }
mkdocs-autorefs = { version = ">=0.2.1", optional = true }
mkdocs-include-markdown-plugin = { version = ">=2.8.0", optional = true }
mkdocs-git-revision-date-plugin = { version = ">=0.3.1", optional = true }
mkdocs-jupyter = { version = ">=0.22.0", optional = true }
jupyter_contrib_nbextensions = { version = ">=0.7.0", optional = true }
mike = { version = ">=1.1.2", optional = true }
twine = { version = "^3.3.0", optional = true }
pre-commit = { version = "^2.12.0", optional = true }
toml = { version = "^0.10.2", optional = true }
bump2version = { version = "^1.0.1", optional = true }
sseclient = { version = "^0.0.27", optional = true }
aiohttp-sse-client = { version = "^0.2.1", optional = true }

[tool.poetry.extras]
test = [
    "pytest",
    "black",
    "isort",
    "mypy",
    "flake8",
    "flake8-docstrings",
    "pytest-cov"
]

dev = [
    "pytest",
    "pytest-cov",
    "tox",
    "tox-conda",
    "pre-commit",
    "virtualenv",
    "pip",
    "twine",
    "toml",
    "bump2version"
]

doc = [
    "mkdocs",
    "mkdocs-material",
    "mkdocstrings",
    "mkdocs-material-extension",
    "mkdocs-autorefs",
    "mkdocs-include-markdown-plugin",
    "mkdocs-git-revision-date-plugin",
    "mkdocs-jupyter",
    "jupyter_contrib_nbextensions",
    "mike"
]

aws = [
    "s3fs"
]

gcs = [
    "gcsfs"
]

azr = [
    "adlfs"
]

polars = [
    "polars"
]

events = [
    "sseclient",
    "aiohttp-sse-client"
]

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
skip_gitignore = true
# you can skip files as below
#skip_glob = docs/conf.py

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
